name: Deploy

on:
  push:
    tags:
      - '*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check environment variables
        run: |
          if [ -z "${{ vars.CI_SERVER_NAME }}" ]; then
            echo "CI_SERVER_NAME variable is not set. Workflow failed."
            exit 1
          fi
          if [ -z "${{ vars.CI_LETSENCRYPT_EMAIL }}" ]; then
            echo "CI_LETSENCRYPT_EMAIL variable is not set. Workflow failed."
            exit 1
          fi

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync openssh-client curl perl

      - name: Setup SSL certificates
        run: |
          mkdir -p ${{ github.workspace }}/elasticsearch-certs
          echo "${{ secrets.CI_SSL_KEY_B64 }}" | base64 -d > ${{ github.workspace }}/elasticsearch-certs/admin-key.pem
          echo "${{ secrets.CI_SSL_CERT_B64 }}" | base64 -d > ${{ github.workspace }}/elasticsearch-certs/admin.pem
          echo "${{ secrets.CI_SSL_CA_B64 }}" | base64 -d > ${{ github.workspace }}/elasticsearch-certs/root-ca.pem

      - name: Update nginx.conf and .env.production
        run: |
          sed -i "s/server_name \$CI_SERVER_NAME/server_name ${{ vars.CI_SERVER_NAME }}/" ${{ github.workspace }}/nginx.conf
          escaped=$(echo "${{ vars.CI_SERVER_NAME }}" | sed -e 's/[\/&]/\\&/g'); perl -i -p0e "s/CI_SERVER_NAME/$escaped/s" ${{ github.workspace }}/.env.production
          escaped=$(echo "${{ vars.CI_ALTERNATE_DOMAINS }}" | sed -e 's/[\/&]/\\&/g'); perl -i -p0e "s/CI_ALTERNATE_DOMAINS/$escaped/s" ${{ github.workspace }}/.env.production
          escaped=$(echo "${{ vars.CI_POSTGRES_PASSWORD }}" | sed -e 's/[\/&]/\\&/g'); perl -i -p0e "s/CI_POSTGRES_PASSWORD/$escaped/s" ${{ github.workspace }}/.env.production
          escaped=$(echo "${{ vars.CI_ELASTIC_PASSWORD }}" | sed -e 's/[\/&]/\\&/g'); perl -i -p0e "s/CI_ELASTIC_PASSWORD/$escaped/s" ${{ github.workspace }}/.env.production
          escaped=$(echo "${{ vars.CI_MASTODON_SECRETS }}" | sed -e 's/[\/&]/\\&/g'); perl -i -p0e "s/CI_MASTODON_SECRETS/$escaped/s" ${{ github.workspace }}/.env.production
          escaped=$(echo "${{ vars.CI_MASTODON_WEB_PUSH_KEYS }}" | sed -e 's/[\/&]/\\&/g'); perl -i -p0e "s/CI_MASTODON_WEB_PUSH_KEYS/$escaped/s" ${{ github.workspace }}/.env.production
          escaped=$(echo "${{ vars.CI_MASTODON_MAIL }}" | sed -e 's/[\/&]/\\&/g'); perl -i -p0e "s/CI_MASTODON_MAIL/$escaped/s" ${{ github.workspace }}/.env.production
          escaped=$(echo "${{ vars.CI_MASTODON_FILE_STORAGE }}" | sed -e 's/[\/&]/\\&/g'); perl -i -p0e "s/CI_MASTODON_FILE_STORAGE/$escaped/s" ${{ github.workspace }}/.env.production
          escaped=$(echo "${{ vars.CI_ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY }}" | sed -e 's/[\/&]/\\&/g'); perl -i -p0e "s/CI_ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY/$escaped/s" ${{ github.workspace }}/.env.production
          escaped=$(echo "${{ vars.CI_ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT }}" | sed -e 's/[\/&]/\\&/g'); perl -i -p0e "s/CI_ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT/$escaped/s" ${{ github.workspace }}/.env.production
          escaped=$(echo "${{ vars.CI_ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY }}" | sed -e 's/[\/&]/\\&/g'); perl -i -p0e "s/CI_ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY/$escaped/s" ${{ github.workspace }}/.env.production

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.CI_PRIVATE_KEY_B64 }}" | base64 -d > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ vars.CI_REMOTE_HOST }} >> ~/.ssh/known_hosts
          ssh-keygen -l -f ~/.ssh/id_ed25519

      - name: Sync files with rsync
        run: |
          rsync -avI --exclude='.git/' --progress ./ ${{ vars.CI_REMOTE_USERNAME }}@${{ vars.CI_REMOTE_HOST }}:${{ vars.CI_REMOTE_PATH }}

      - name: Run deployment script
        run: |
          ssh ${{ vars.CI_REMOTE_USERNAME }}@${{ vars.CI_REMOTE_HOST }} "CI_PATH=${{ vars.CI_REMOTE_PATH }} CI_MASTODON_VERSION=${{ vars.CI_MASTODON_VERSION}} CI_SERVER_NAME=${{ vars.CI_SERVER_NAME }} CI_LETSENCRYPT_EMAIL=${{ vars.CI_LETSENCRYPT_EMAIL }} CI_ELASTIC_PASSWORD=${{ vars.CI_ELASTIC_PASSWORD }} CI_POSTGRES_PASSWORD=${{ vars.CI_POSTGRES_PASSWORD }} ${{ vars.CI_REMOTE_PATH }}/run.sh"
