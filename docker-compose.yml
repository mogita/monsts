services:
  web:
    container_name: monsts-web
    build:
      dockerfile: Dockerfile.mastodon
      context: .
      args:
        - CI_MASTODON_VERSION=$CI_MASTODON_VERSION
    restart: always
    env_file: .env.production
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    depends_on:
      - db
      - redis
    networks:
      - monsts
      - nginx-proxy
    healthcheck:
      test:
        - CMD-SHELL
        - wget -q --spider --proxy=off localhost:3000/health || exit 1
    volumes:
      - ./mastodon/public/system:/mastodon/public/system

  streaming:
    container_name: monsts-streaming
    image: ghcr.io/mastodon/streaming:$CI_MASTODON_VERSION
    restart: always
    env_file: .env.production
    command: node ./streaming
    depends_on:
      - db
      - redis
    networks:
      - monsts
      - nginx-proxy
    healthcheck:
      test:
        - CMD-SHELL
        - wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health ||
          exit 1

  sidekiq-default:
    container_name: monsts-sidekiq-default
    build:
      dockerfile: Dockerfile.mastodon
      context: .
      args:
        - CI_MASTODON_VERSION=$CI_MASTODON_VERSION
    restart: always
    env_file: .env.production
    environment:
      - DB_POOL=20
    command: bundle exec sidekiq -c 20 -q default
    depends_on:
      - db
      - redis
    networks:
      - monsts
      - nginx-proxy
    healthcheck:
      test:
        - CMD-SHELL
        - ps aux | grep '[s]idekiq 6' || false
    volumes:
      - ./mastodon/public/system:/mastodon/public/system

  sidekiq-ingress:
    container_name: monsts-sidekiq-ingress
    build:
      dockerfile: Dockerfile.mastodon
      context: .
      args:
        - CI_MASTODON_VERSION=$CI_MASTODON_VERSION
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq -c 3 -q ingress
    depends_on:
      - db
      - redis
    networks:
      - monsts
      - nginx-proxy
    healthcheck:
      test:
        - CMD-SHELL
        - ps aux | grep '[s]idekiq 6' || false
    volumes:
      - ./mastodon/public/system:/mastodon/public/system

  sidekiq-mailer:
    container_name: monsts-sidekiq-mailer
    build:
      dockerfile: Dockerfile.mastodon
      context: .
      args:
        - CI_MASTODON_VERSION=$CI_MASTODON_VERSION
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq -c 1 -q mailers
    depends_on:
      - db
      - redis
    networks:
      - monsts
      - nginx-proxy
    healthcheck:
      test:
        - CMD-SHELL
        - ps aux | grep '[s]idekiq 6' || false
    volumes:
      - ./mastodon/public/system:/mastodon/public/system

  sidekiq-scheduler:
    container_name: monsts-sidekiq-scheduler
    build:
      dockerfile: Dockerfile.mastodon
      context: .
      args:
        - CI_MASTODON_VERSION=$CI_MASTODON_VERSION
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq -c 1 -q scheduler
    depends_on:
      - db
      - redis
    networks:
      - monsts
      - nginx-proxy
    healthcheck:
      test:
        - CMD-SHELL
        - ps aux | grep '[s]idekiq 6' || false
    volumes:
      - ./mastodon/public/system:/mastodon/public/system

  sidekiq-pull:
    container_name: monsts-sidekiq-pull
    build:
      dockerfile: Dockerfile.mastodon
      context: .
      args:
        - CI_MASTODON_VERSION=$CI_MASTODON_VERSION
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq -c 4 -q pull
    depends_on:
      - db
      - redis
    networks:
      - monsts
      - nginx-proxy
    healthcheck:
      test:
        - CMD-SHELL
        - ps aux | grep '[s]idekiq 6' || false
    volumes:
      - ./mastodon/public/system:/mastodon/public/system

  sidekiq-push:
    container_name: monsts-sidekiq-push
    build:
      dockerfile: Dockerfile.mastodon
      context: .
      args:
        - CI_MASTODON_VERSION=$CI_MASTODON_VERSION
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq -c 1 -q push
    depends_on:
      - db
      - redis
    networks:
      - monsts
      - nginx-proxy
    healthcheck:
      test:
        - CMD-SHELL
        - ps aux | grep '[s]idekiq 6' || false
    volumes:
      - ./mastodon/public/system:/mastodon/public/system

  db:
    container_name: monsts-db
    restart: always
    image: postgres:14-alpine
    shm_size: 256mb
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=mastodon
      - POSTGRES_USER=mastodon
      - POSTGRES_PASSWORD=$CI_POSTGRES_PASSWORD
    networks:
      - monsts
    healthcheck:
      test:
        - CMD
        - pg_isready
        - -U
        - postgres
    volumes:
      - ./postgres:/var/lib/postgresql/data

  redis:
    container_name: monsts-redis
    restart: always
    image: redis:7-alpine
    networks:
      - monsts
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
    volumes:
      - ./redis:/data

  # For smaller instances or even personal ones, ES can be safely disabled to save storage space and memory
  # (remember to set `ES_ENABLED=false` in .env.production)
  # To enable ES, uncomment the following block and set `ES_ENABLED=true` in .env.production
  #
  es:
    container_name: monsts-es
    build:
      dockerfile: Dockerfile.elasticsearch
      context: .
      args:
        - CI_MASTODON_VERSION=$CI_MASTODON_VERSION
    restart: always
    environment:
      - ES_JAVA_OPTS=-Xms1g -Xmx1g -Des.enforce.bootstrap.checks=true
      - ELASTIC_PASSWORD=$CI_ELASTIC_PASSWORD
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.key=certs/admin-key.pem
      - xpack.security.transport.ssl.certificate=certs/admin.pem
      - xpack.security.transport.ssl.certificate_authorities=["certs/root-ca.pem"]
      - xpack.watcher.enabled=false
      - xpack.graph.enabled=false
      - xpack.ml.enabled=false
      - bootstrap.memory_lock=true
      - cluster.name=es-mastodon
      - discovery.type=single-node
      - thread_pool.write.queue_size=1000
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - 127.0.0.1:9200:9200
    networks:
      - monsts
      - nginx-proxy
    healthcheck:
      test:
        - CMD-SHELL
        - curl --silent --fail --user elastic:$CI_ELASTIC_PASSWORD localhost:9200/_cluster/health || exit 1
    volumes:
      - ./elasticsearch:/usr/share/elasticsearch/data
      - ./elasticsearch-certs:/usr/share/elasticsearch/config/certs

networks:
  monsts:
    internal: true
  nginx-proxy:
    external: true
    name: nginx-proxy-manager_default
